// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/calendarrr.h"
#include <Rcpp.h>

using namespace Rcpp;

// cal_create_cpp
SEXP cal_create_cpp(const std::string& cal);
RcppExport SEXP _calendarrr_cal_create_cpp(SEXP calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type cal(calSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_create_cpp(cal));
    return rcpp_result_gen;
END_RCPP
}
// cal_add_holiday_cpp
SEXP cal_add_holiday_cpp(SEXP cal_sexp, std::vector<QuantLib::Date> holidays);
RcppExport SEXP _calendarrr_cal_add_holiday_cpp(SEXP cal_sexpSEXP, SEXP holidaysSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cal_sexp(cal_sexpSEXP);
    Rcpp::traits::input_parameter< std::vector<QuantLib::Date> >::type holidays(holidaysSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_add_holiday_cpp(cal_sexp, holidays));
    return rcpp_result_gen;
END_RCPP
}
// cal_remove_holiday_cpp
SEXP cal_remove_holiday_cpp(SEXP cal_sexp, std::vector<QuantLib::Date> holidays);
RcppExport SEXP _calendarrr_cal_remove_holiday_cpp(SEXP cal_sexpSEXP, SEXP holidaysSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cal_sexp(cal_sexpSEXP);
    Rcpp::traits::input_parameter< std::vector<QuantLib::Date> >::type holidays(holidaysSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_remove_holiday_cpp(cal_sexp, holidays));
    return rcpp_result_gen;
END_RCPP
}
// cal_list_holidays_cpp
std::vector<QuantLib::Date> cal_list_holidays_cpp(SEXP cal_sexp, QuantLib::Date from, QuantLib::Date to, bool include_weekends);
RcppExport SEXP _calendarrr_cal_list_holidays_cpp(SEXP cal_sexpSEXP, SEXP fromSEXP, SEXP toSEXP, SEXP include_weekendsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cal_sexp(cal_sexpSEXP);
    Rcpp::traits::input_parameter< QuantLib::Date >::type from(fromSEXP);
    Rcpp::traits::input_parameter< QuantLib::Date >::type to(toSEXP);
    Rcpp::traits::input_parameter< bool >::type include_weekends(include_weekendsSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_list_holidays_cpp(cal_sexp, from, to, include_weekends));
    return rcpp_result_gen;
END_RCPP
}
// cal_is_weekend_cpp
std::vector<bool> cal_is_weekend_cpp(SEXP cal_sexp, std::vector<QuantLib::Date> dates);
RcppExport SEXP _calendarrr_cal_is_weekend_cpp(SEXP cal_sexpSEXP, SEXP datesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cal_sexp(cal_sexpSEXP);
    Rcpp::traits::input_parameter< std::vector<QuantLib::Date> >::type dates(datesSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_is_weekend_cpp(cal_sexp, dates));
    return rcpp_result_gen;
END_RCPP
}
// cal_adjust_cpp
std::vector<QuantLib::Date> cal_adjust_cpp(SEXP cal_sexp, std::vector<QuantLib::Date> dates);
RcppExport SEXP _calendarrr_cal_adjust_cpp(SEXP cal_sexpSEXP, SEXP datesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cal_sexp(cal_sexpSEXP);
    Rcpp::traits::input_parameter< std::vector<QuantLib::Date> >::type dates(datesSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_adjust_cpp(cal_sexp, dates));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
NumericVector rcpp_hello_world();
RcppExport SEXP _calendarrr_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_calendarrr_cal_create_cpp", (DL_FUNC) &_calendarrr_cal_create_cpp, 1},
    {"_calendarrr_cal_add_holiday_cpp", (DL_FUNC) &_calendarrr_cal_add_holiday_cpp, 2},
    {"_calendarrr_cal_remove_holiday_cpp", (DL_FUNC) &_calendarrr_cal_remove_holiday_cpp, 2},
    {"_calendarrr_cal_list_holidays_cpp", (DL_FUNC) &_calendarrr_cal_list_holidays_cpp, 4},
    {"_calendarrr_cal_is_weekend_cpp", (DL_FUNC) &_calendarrr_cal_is_weekend_cpp, 2},
    {"_calendarrr_cal_adjust_cpp", (DL_FUNC) &_calendarrr_cal_adjust_cpp, 2},
    {"_calendarrr_rcpp_hello_world", (DL_FUNC) &_calendarrr_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_calendarrr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
